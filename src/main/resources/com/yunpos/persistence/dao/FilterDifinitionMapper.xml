<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunpos.persistence.dao.FilterDifinitionMapper" >
  <resultMap id="BaseResultMap" type="com.yunpos.model.FilterDifinition" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" typeHandler="com.yunpos.mybatisPlugin.FilterTypeHandler" />
    <result column="value_type" jdbcType="INTEGER" property="valueType" typeHandler="com.yunpos.mybatisPlugin.FilterValueTypeHandler"/>
    <result column="data_type" jdbcType="INTEGER" property="dataType" typeHandler="com.yunpos.mybatisPlugin.ValueDataTypeHandler"/>
    <result column="col_name" property="colName" jdbcType="VARCHAR" />
    <result column="key_param" property="keyParam" jdbcType="VARCHAR" />
    <result column="key_column" property="keyColumn" jdbcType="VARCHAR" />
    <result column="support_op" property="supportOpCode" jdbcType="INTEGER" />
    <result column="filter_values" property="values" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, resource_id, type, value_type, data_type, col_name, key_param, key_column, support_op, filter_values
  </sql>
  <select id="selectByResourceId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from filter_difinition
    where resource_id = #{rid,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from filter_difinition
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from filter_difinition
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yunpos.model.FilterDifinition" >
    insert into filter_difinition (id, resource_id,
      type, value_type, data_type,
      col_name, key_param, key_column,
      support_op,filter_values)
    value (#{id,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER},
      #{type,jdbcType=INTEGER}, #{valueType,jdbcType=INTEGER}, #{dataType,jdbcType=INTEGER}, 
      #{colName,jdbcType=VARCHAR}, #{keyParam,jdbcType=VARCHAR}, #{keyColumn,jdbcType=VARCHAR},
      #{supportOpCode,jdbcType=INTEGER},#{values,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yunpos.model.FilterDifinition" >
    insert into filter_difinition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="valueType != null" >
        value_type,
      </if>
      <if test="dataType != null" >
        data_type,
      </if>
      <if test="colName != null" >
        col_name,
      </if>
      <if test="keyParam != null" >
        key_param,
      </if>
      <if test="keyColumn != null" >
        key_column,
      </if>
      <if test="supportOpCode != null" >
        support_op,
      </if>
      <if test="value != null" >
        filter_values,
      </if>
    </trim>
    <trim prefix="value (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="valueType != null" >
        #{valueType,jdbcType=INTEGER},
      </if>
      <if test="dataType != null" >
        #{dataType,jdbcType=INTEGER},
      </if>
      <if test="colName != null" >
        #{colName,jdbcType=VARCHAR},
      </if>
      <if test="keyParam != null" >
        #{keyParam,jdbcType=VARCHAR},
      </if>
      <if test="keyColumn != null" >
        #{keyColumn,jdbcType=VARCHAR},
      </if>
      <if test="supportOpCode != null" >
        #{supportOpCode,jdbcType=INTEGER},
      </if>
      <if test="values != null" >
        #{values,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunpos.model.FilterDifinition" >
    update filter_difinition
    <set >
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="valueType != null" >
        value_type = #{valueType,jdbcType=INTEGER},
      </if>
      <if test="dataType != null" >
        data_type = #{dataType,jdbcType=INTEGER},
      </if>
      <if test="colName != null" >
        col_name = #{colName,jdbcType=VARCHAR},
      </if>
      <if test="keyParam != null" >
        key_param = #{keyParam,jdbcType=VARCHAR},
      </if>
      <if test="keyColumn != null" >
        key_column = #{keyColumn,jdbcType=VARCHAR},
      </if>
      <if test="supportOpCode != null" >
        support_op = #{supportOpCode,jdbcType=INTEGER},
      </if>
      <if test="values != null" >
        filter_values = #{values,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunpos.model.FilterDifinition" >
    update filter_difinition
    set resource_id = #{resourceId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      value_type = #{valueType,jdbcType=INTEGER},
      data_type = #{dataType,jdbcType=INTEGER},
      col_name = #{colName,jdbcType=VARCHAR},
      key_param = #{keyParam,jdbcType=VARCHAR},
      key_column = #{keyColumn,jdbcType=VARCHAR},
      support_op = #{supportOpCode,jdbcType=INTEGER},
      filter_values = #{values,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>