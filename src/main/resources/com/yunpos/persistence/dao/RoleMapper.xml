<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunpos.persistence.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.yunpos.model.Role" >
    <id column="roleId" property="roleId" jdbcType="INTEGER" />
    <result column="roleName" property="roleName" jdbcType="VARCHAR" />
    <result column="roleDesc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="orgId" property="orgId" jdbcType="INTEGER" />
    <result column="createUserId" property="createUserId" jdbcType="INTEGER" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modifyUserId" property="modifyUserId" jdbcType="INTEGER" />
    <result column="modifyDate" property="modifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    roleId, roleName, roleDesc, orgId, createUserId, createDate, modifyUserId, modifyDate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where roleId = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where roleId = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yunpos.model.Role" >
    insert into role (roleId, roleName, roleDesc, 
      orgId, createUserId, createDate, 
      modifyUserId, modifyDate)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{orgId,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{modifyUserId,jdbcType=INTEGER}, #{modifyDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yunpos.model.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        roleId,
      </if>
      <if test="roleName != null" >
        roleName,
      </if>
      <if test="roleDesc != null" >
        roleDesc,
      </if>
      <if test="orgId != null" >
        orgId,
      </if>
      <if test="createUserId != null" >
        createUserId,
      </if>
      <if test="createDate != null" >
        createDate,
      </if>
      <if test="modifyUserId != null" >
        modifyUserId,
      </if>
      <if test="modifyDate != null" >
        modifyDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunpos.model.Role" >
    update role
    <set >
      <if test="roleName != null" >
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        roleDesc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        orgId = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        createUserId = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        modifyUserId = #{modifyUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null" >
        modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunpos.model.Role" >
    update role
    set roleName = #{roleName,jdbcType=VARCHAR},
      roleDesc = #{roleDesc,jdbcType=VARCHAR},
      orgId = #{orgId,jdbcType=INTEGER},
      createUserId = #{createUserId,jdbcType=INTEGER},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      modifyUserId = #{modifyUserId,jdbcType=INTEGER},
      modifyDate = #{modifyDate,jdbcType=TIMESTAMP}
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>

	<!-- ##################################### -->
	<delete id="batchDeleteByIds">
		delete from role where roleId in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>