<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunpos.persistence.dao.SysUserMapper">
	<resultMap id="BaseResultMap" type="com.yunpos.model.SysUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="orgId" property="orgId" jdbcType="INTEGER" />
		<result column="orgName" property="orgName" jdbcType="VARCHAR" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="fullname" property="fullname" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="source" property="source" jdbcType="VARCHAR" />
		<result column="lastLoginDatetime" property="lastLoginDatetime"
			jdbcType="TIMESTAMP" />
		<result column="createdAt" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="createdBy" property="createdBy" jdbcType="INTEGER" />
		<result column="updatedAt" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="updatedBy" property="updatedBy" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, orgId, orgName, userName, phone, email, password,
		nickname, fullname,
		status,
		salt, description, source,
		lastLoginDatetime, createdAt, createdBy,
		updatedAt, updatedBy
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sys_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.yunpos.model.SysUser"
		useGeneratedKeys="true" keyProperty="id">
		insert into sys_user (orgId,
		orgName,
		userName, phone, email,
		password, nickname, fullname,
		status,
		salt, description,
		source, lastLoginDatetime, createdAt,
		createdBy,
		updatedAt, updatedBy
		)
		values (#{orgId,jdbcType=INTEGER},
		#{orgName,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
		#{fullname,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{source,jdbcType=VARCHAR}, #{lastLoginDatetime,jdbcType=TIMESTAMP},
		#{createdAt,jdbcType=TIMESTAMP},
		#{createdBy,jdbcType=INTEGER},
		#{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.yunpos.model.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orgId != null">
				orgId,
			</if>
			<if test="orgName != null">
				orgName,
			</if>
			<if test="userName != null">
				userName,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="fullname != null">
				fullname,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="source != null">
				source,
			</if>
			<if test="lastLoginDatetime != null">
				lastLoginDatetime,
			</if>
			<if test="createdAt != null">
				createdAt,
			</if>
			<if test="createdBy != null">
				createdBy,
			</if>
			<if test="updatedAt != null">
				updatedAt,
			</if>
			<if test="updatedBy != null">
				updatedBy,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=INTEGER},
			</if>
			<if test="orgName != null">
				#{orgName,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="fullname != null">
				#{fullname,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				#{source,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginDatetime != null">
				#{lastLoginDatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="createdBy != null">
				#{createdBy,jdbcType=INTEGER},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedBy != null">
				#{updatedBy,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.yunpos.model.SysUser">
		update sys_user
		<set>
			<if test="orgId != null">
				orgId = #{orgId,jdbcType=INTEGER},
			</if>
			<if test="orgName != null">
				orgName = #{orgName,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				userName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="fullname != null">
				fullname = #{fullname,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				source = #{source,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginDatetime != null">
				lastLoginDatetime =
				#{lastLoginDatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="createdAt != null">
				createdAt = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="createdBy != null">
				createdBy = #{createdBy,jdbcType=INTEGER},
			</if>
			<if test="updatedAt != null">
				updatedAt = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedBy != null">
				updatedBy = #{updatedBy,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yunpos.model.SysUser">
		update sys_user
		set orgId = #{orgId,jdbcType=INTEGER},
		orgName =
		#{orgName,jdbcType=VARCHAR},
		userName = #{userName,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		nickname =
		#{nickname,jdbcType=VARCHAR},
		fullname = #{fullname,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		source =
		#{source,jdbcType=VARCHAR},
		lastLoginDatetime =
		#{lastLoginDatetime,jdbcType=TIMESTAMP},
		createdAt =
		#{createdAt,jdbcType=TIMESTAMP},
		createdBy =
		#{createdBy,jdbcType=INTEGER},
		updatedAt =
		#{updatedAt,jdbcType=TIMESTAMP},
		updatedBy =
		#{updatedBy,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- ##################################### -->
	<delete id="batchDeleteByIds">
		delete from sys_user where id in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<select id="findListByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user where id in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

</mapper>